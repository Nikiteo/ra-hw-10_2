{"version":3,"sources":["actions/actionTypes.js","actions/actionCreators.js","components/serviceAdd.jsx","components/serviceFilter.jsx","components/serviceList.jsx","App.jsx","reducers/serviceList.js","reducers/serviceAdd.js","reducers/serviceFilter.js","store/store.js","index.js"],"names":["ADD_SERVICE","REMOVE_SERVICE","CHANGE_SERVICE_FIELD","CLEAR_SERVICE_FIELD","EDIT_SERVICE","UPDATE_SERVICE","FILTER_SERVICES","clearServiceField","type","ServiceAdd","props","item","useSelector","state","serviceAdd","dispatch","useDispatch","handleChange","e","target","name","value","payload","changeServiceField","onSubmit","id","price","preventDefault","addService","onReset","onChange","Filter","items","serviceList","useState","filterText","setFilterText","filterService","placeholder","ServiceList","storedItems","filteredItems","serviceFilter","setItems","useEffect","itemsToSet","handleRemove","removeService","handleEdit","title","map","className","onClick","App","initialState","nanoid","reducer","combineReducers","action","Number","filter","service","immutable","data","match","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d41ffad4.chunk.js","sourcesContent":["export const ADD_SERVICE = 'ADD_SERVICE';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\nexport const CLEAR_SERVICE_FIELD = 'CLEAR_SERVICE_FIELD';\nexport const EDIT_SERVICE = 'EDIT_SERVICE';\nexport const UPDATE_SERVICE = 'UPDATE_SERVICE';\nexport const FILTER_SERVICES = 'FILTER_SERVICES';","import {\n  ADD_SERVICE,\n  REMOVE_SERVICE,\n  CHANGE_SERVICE_FIELD,\n  CLEAR_SERVICE_FIELD,\n  EDIT_SERVICE,\n  UPDATE_SERVICE,\n  FILTER_SERVICES\n} from './actionTypes';\n\nexport function addService(name, price) {\n  return {\n    type: ADD_SERVICE,\n    payload: {\n      name,\n      price\n    }\n  };\n};\n\nexport function removeService(id) {\n  return {\n    type: REMOVE_SERVICE,\n    payload: {\n      id\n    }\n  };\n};\n\nexport function changeServiceField(name, value) {\n  return {\n    type: CHANGE_SERVICE_FIELD,\n    payload: {\n      name,\n      value\n    }\n  }\n};\n\nexport function clearServiceField() {\n  return {\n    type: CLEAR_SERVICE_FIELD,\n  }\n};\n\nexport function editService(id, title, price) {\n  return {\n    type: EDIT_SERVICE,\n    payload: {\n      id,\n      title,\n      price\n    }\n  }\n}\n\nexport function updateService(id, name, price) {\n  return {\n    type: UPDATE_SERVICE,\n    payload: {\n      id,\n      name,\n      price\n    }\n  }\n}\n\nexport function filterService(items, value) {\n  return {\n    type: FILTER_SERVICES,\n    payload: {\n      items,\n      value\n    }\n  }\n}","import { useSelector, useDispatch } from 'react-redux';\nimport { changeServiceField, addService, clearServiceField, updateService } from '../actions/actionCreators';\n\nexport default function ServiceAdd(props) {\n  const item = useSelector(state => state.serviceAdd);\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch(changeServiceField(name, value));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (item.id) {\n      dispatch(updateService(item.id, item.name, item.price));\n      dispatch(clearServiceField());\n    } else if (item.name && item.price) {\n      dispatch(addService(item.name, item.price));\n      dispatch(clearServiceField());\n    }\n  };\n\n  const handleReset = () => {\n    dispatch(clearServiceField());\n  }\n\n  return (\n    <form onSubmit={handleSubmit} onReset={handleReset}>\n      <input name='name' onChange={handleChange} value={item.name} />\n      <input name='price' onChange={handleChange} value={item.price} />\n      <button type='submit'>Save</button>\n      <button type='reset'>Cancel</button>\n    </form>\n  )\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterService } from '../actions/actionCreators';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.serviceList);\n  const [filterText, setFilterText ] = useState('');\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    dispatch(filterService(items, value));\n    setFilterText(value);\n  }\n  return (\n    <div>\n      <input type=\"text\" value={filterText} onChange={handleChange} placeholder=\"Поиск\"></input>\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeService, editService, clearServiceField } from '../actions/actionCreators';\n\nexport default function ServiceList() {\n  const storedItems = useSelector(state => state.serviceList);\n  const filteredItems = useSelector(state => state.serviceFilter);\n  const [items, setItems] = useState(storedItems);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const itemsToSet = filteredItems.filterText ? filteredItems.filteredItems : storedItems;\n    setItems(itemsToSet);\n    return;\n  }, [filteredItems, storedItems])\n\n  const handleRemove = id => {\n    dispatch(removeService(id));\n    dispatch(clearServiceField());\n  }\n  const handleEdit = (item) => {\n    dispatch(editService(item.id, item.name, item.price));\n  }\n\n  return (\n    <ul>\n      {items.map(item => <li key={item.id}> {item.name} - {item.price}\n        <button className=\"button\" onClick={() => handleEdit(item)}>Edit</button>\n        <button className=\"button\" onClick={() => handleRemove(item.id)}>Remove</button></li>\n      )}\n    </ul>\n  )\n}","import './App.css';\nimport ServiceAdd from './components/serviceAdd';\nimport Filter from './components/serviceFilter';\nimport ServiceList from './components/serviceList';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Filter />\n      <ServiceAdd />\n      <ServiceList />\n    </div>\n  );\n}","import { nanoid } from 'nanoid';\nimport { ADD_SERVICE, REMOVE_SERVICE, UPDATE_SERVICE, } from '../actions/actionTypes';\n\nconst initialState = [{\n  id: nanoid(),\n  name: 'Замена стекла',\n  price: 21000\n}, {\n  id: nanoid(),\n  name: 'Замена дисплея',\n  price: 25000\n}, ];\n\nexport default function serviceListReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_SERVICE:\n      const {\n        name,\n        price\n      } = action.payload;\n      return [...state, {\n        id: nanoid(),\n        name,\n        price: Number(price)\n      }];\n    case REMOVE_SERVICE:\n      const {\n        id\n      } = action.payload;\n      return state.filter(service => service.id !== id);\n    case UPDATE_SERVICE:\n      const service = action.payload;\n      const immutable = state.filter(item => item.id !== service.id);\n      return [...immutable, service]\n    default:\n      return state;\n  }\n}","import {\n  CHANGE_SERVICE_FIELD,\n  CLEAR_SERVICE_FIELD,\n  EDIT_SERVICE,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  name: '',\n  price: '',\n};\n\nexport default function serviceAddReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_SERVICE_FIELD:\n      const {\n        name,\n        value\n      } = action.payload;\n      return {\n        ...state,\n        [name]: value\n      };\n    case CLEAR_SERVICE_FIELD:\n      return {\n        name: '',\n        price: ''\n      };\n    case EDIT_SERVICE:\n      const {\n       id,\n       title,\n       price\n      } = action.payload;\n      return { id, name: title, price };\n    default:\n      return state;\n  }\n}","import {\n  FILTER_SERVICES\n} from '../actions/actionTypes';\n\nconst initialState = {\n  filteredItems: [],\n  filterText: false\n};\n\nexport default function serviceFilterReducer(state = initialState, action) {\n  switch (action.type) {\n    case FILTER_SERVICES:\n      const {\n        items, value\n      } = action.payload;\n\n      if (!value) {\n        return {\n          filteredItems: items,\n          filterText: false\n        };\n      }\n\n      const data = items.filter(service => service.name.match(value) ? service : null);\n\n      return {\n        filteredItems: data, filterText: value\n      };\n\n    default:\n      return state;\n  }\n}","import { createStore, combineReducers } from \"redux\";\nimport serviceListReducer from '../reducers/serviceList';\nimport serviceAddReducer from '../reducers/serviceAdd';\nimport serviceFilterReducer from \"../reducers/serviceFilter\";\n\nconst reducer = combineReducers({\n  serviceList: serviceListReducer,\n  serviceAdd: serviceAddReducer,\n  serviceFilter: serviceFilterReducer,\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}